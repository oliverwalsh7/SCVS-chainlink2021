{"version":3,"sources":["Navbar.js","pages/Register.js","pages/VoterHome.js","pages/AdminHome.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","props","className","style","display","this","town","account","Component","Register","handleChange","event","setState","target","name","value","state","fontSize","for","type","id","fname","onChange","handle","lname","dob","maxlength","placeholder","ssn","onClick","register","VoterHome","Accordion","AccordionSummary","expandIcon","aria-controls","float","AccordionDetails","AdminHome","App","verifyMetaMaskAdr","a","getCitizen","postAddress","url","URL","params","Object","keys","forEach","key","searchParams","append","fetch","method","mode","headers","then","resp","json","console","log","citizen","statusMessage","count","fillRandom","first_name","last_name","substring","registered","bind","loadWeb3","loadBlockchainData","window","ethereum","web3","Web3","enable","currentProvider","alert","eth","getAccounts","accounts","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e14f7846.chunk.js","sourcesContent":["import { React, Component } from 'react';\nimport './Navbar.css';\n\nclass Navbar extends Component {\n\n    constructor(props) {\n        super(props)\n      }\n\n    render() {\n        return (\n            <div className=\"navbar-wrapper\">\n                <div style={{display: \"flex\"}}>\n                    <h2 className=\"title\">LINKTOPIA</h2>\n                    <p>&nbsp;{this.props.town}</p>\n                </div>\n                <p className=\"role\">VOTER</p>\n                <p className=\"address\">{this.props.account}</p>\n            </div>\n        )\n    }\n}\n\nexport default Navbar;","import { React, Component } from 'react';\nimport './Register.css';\n\nclass Register extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n\n        };\n    }\n\n    \n    handleChange = (event) => {\n        this.setState({\n            [event.target.name]: event.target.value\n        });\n    };\n\n    render() {\n        return (\n            <div className=\"registration-page-wrapper\">\n                <p style={{fontSize: 32}}>This address has not yet been registered to vote.</p>\n                <p>Register to vote using this address (note: only one address can be registered per citizen):</p>\n                <form>\n                    <div className=\"field\">\n                        <label for=\"fname\">First name:</label>\n                        <input type=\"text\" id=\"fname\" name=\"fname\" value={this.props.fname} onChange={this.props.handle} /><br />\n                    </div>\n                    <div className=\"field\">\n                        <label for=\"lname\">Last name:</label>\n                        <input type=\"text\" id=\"lname\" name=\"lname\" value={this.props.lname} onChange={this.props.handle}/><br />\n                    </div>\n                    <div className=\"field\">\n                        <label for=\"dob\">Date of birth:</label>\n                        <input type=\"date\" id=\"dob\" name=\"dob\" value={this.props.dob} onChange={this.props.handle}/><br />\n                    </div>\n                    <div className=\"field\">\n                        <label for=\"ssn\">SSN:</label>\n                        <input type=\"text\" id=\"ssn\" name=\"ssn\" maxlength=\"11\" placeholder=\"###-##-####\" value={this.props.ssn} onChange={this.props.handle} />\n                    </div>\n                </form>\n                <button onClick={this.props.register}>Register</button>\n            </div>\n        )\n    }\n}\n\nexport default Register;","import { React, Component } from 'react';\nimport './VoterHome.css';\nimport Accordion from '@material-ui/core/Accordion';\nimport AccordionDetails from '@material-ui/core/AccordionDetails';\nimport AccordionSummary from '@material-ui/core/AccordionSummary';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\n\nclass VoterHome extends Component {\n\n    constructor(props) {\n        super(props)\n        this.state = {\n\n        }\n      }\n\n    render() {\n        return (\n            <div className=\"voter-home-page-wrapper\">\n                <p style={{fontSize: 32}}>Welcome, <b>{this.props.fname}&nbsp;{this.props.lname}</b></p>\n                <p>Your elections:</p>\n                <div className=\"election-dropdowns\">\n                    <Accordion>\n                        <AccordionSummary\n                            expandIcon={<ExpandMoreIcon />}\n                            aria-controls=\"panel1a-content\"\n                            id=\"panel1a-header\"\n                        >\n                            <p>Title &nbsp;&nbsp;&nbsp;</p>\n                            <p style={{float: \"right\"}}>Voted/not voted placeholder</p>\n                        </AccordionSummary>\n                        <AccordionDetails>\n                            <p>Content</p>\n                        </AccordionDetails>\n                    </Accordion>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default VoterHome;","import React from 'react';\nimport './AdminHome.css';\n\nfunction AdminHome() {\n    return (\n        <div className=\"admin-home-page-wrapper\">\n            <p style={{fontSize: 32}}>Welcome, <b>NAME PLACEHOLDER</b></p>\n            <p>Manage elections:</p>\n            <div className=\"elections\">\n                <div className=\"in-progress\">\n                    <p style={{textDecoration: \"underline\"}}>In Progress:</p>\n                    <p>ELECTION LINK PLACEHOLDER</p>\n                </div>\n                <div className=\"scheduled\">\n                    <p style={{textDecoration: \"underline\"}}>Scheduled:</p>\n                    <p>ELECTION LINK PLACEHOLDER</p>\n                </div>\n                <div className=\"concluded\">\n                    <p style={{textDecoration: \"underline\"}}>Concluded:</p>\n                    <p>ELECTION LINK PLACEHOLDER</p>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default AdminHome;","import React, { Component } from 'react';\nimport './App.css';\nimport Navbar from './Navbar.js';\nimport Register from './pages/Register.js';\nimport VoterHome from './pages/VoterHome.js';\nimport AdminHome from './pages/AdminHome.js';\nimport Web3 from 'web3';\n\nclass App extends Component {\n\n  constructor(props) {\n    super(props)\n    this.state = {\n      account: '',\n      town: '',\n      fname: '',\n      lname: '',\n      dob: '',\n      ssn: '',\n      registered: false,\n      citizen: {\n        \n      },\n      statusMessage: ''\n    }\n    this.handleChange = this.handleChange.bind(this);\n    this.getCitizen = this.getCitizen.bind(this);\n    this.postAddress = this.postAddress.bind(this);\n    this.register = this.register.bind(this);\n    this.bind = this.fillRandom.bind(this);\n  }\n\n  async componentWillMount() {\n    console.log(\"start\")\n    await this.loadWeb3()\n    await this.loadBlockchainData()\n    await this.verifyMetaMaskAdr();\n    if (this.state.citizen.ssn) {\n      this.setState({\n        fname: this.state.citizen.first_name,\n        lname: this.state.citizen.last_name,\n        dob: this.state.citizen.dob,\n        ssn: this.state.citizen.ssn,\n        registered: true\n      })\n      console.log(this.state)\n    }\n    console.log(\"end\")\n  }\n\n  verifyMetaMaskAdr = async () => {\n    await this.getCitizen(3)\n  }\n\n  async loadWeb3() {\n    if (window.ethereum) {\n      window.web3 = new Web3(window.ethereum)\n      await window.ethereum.enable()\n    }\n    else if (window.web3) {\n      window.web3 = new Web3(window.web3.currentProvider)\n    }\n    else {\n      window.alert('Non-Ethereum browser detected')\n    }\n  }\n  \n  async loadBlockchainData() {\n    const web3 = window.web3\n    const accounts = await web3.eth.getAccounts()\n    this.setState({ account: accounts[0] })\n  }\n  \n  handleChange = (event) => {\n    this.setState({\n      [event.target.name]: event.target.value\n    });\n  };\n\n  async getCitizen(type) {\n\n    var url = new URL(\"http://localhost:8081/\")\n\n    var params = { \n      \"ssn\": this.state.ssn,\n      \"fname\": this.state.fname,\n      \"lname\": this.state.lname,\n      \"dob\": this.state.dob,\n      \"address\": this.state.account,\n      \"type\": type,\n    }\n    Object.keys(params).forEach(key => url.searchParams.append(key, params[key]))\n\n    const resp = await fetch(url,  {\n      method: \"get\",\n      mode: \"cors\",\n      headers: {\n        \"Access-Control-Allow-Origin\" : \"*\",\n        \"Content-Type\": \"application/json\"\n      },\n    }).then((resp) => resp.json()).then(resp => {\n      console.log(resp)\n      this.setState({citizen: resp})\n      if (this.state.citizen.count == 1) {\n        this.setState({ registered: true })\n      }\n      return resp\n    })\n  }\n\n  postAddress = async() => {\n    var url = new URL(\"http://localhost:8081/\")\n    var params = { \n      \"ssn\": this.state.ssn,\n      \"fname\": this.state.fname,\n      \"lname\": this.state.lname,\n      \"dob\": this.state.dob,\n      \"address\": this.state.account,\n    }\n    Object.keys(params).forEach(key => url.searchParams.append(key, params[key]))\n\n    let response = await fetch(url,  {\n      method: \"post\",\n      mode: \"cors\",\n      headers: {\n        \"Access-Control-Allow-Origin\" : \"*\",\n        \"Content-Type\": \"application/json\"\n      }\n      }).then((resp) => resp.json()).then(resp => {\n        console.log(resp)\n        this.setState({citizen: resp})\n        return resp\n      })\n  }\n\n  register = async() => {\n    await this.getCitizen(1)\n    if (this.state.citizen.ssn) {\n      this.setState({ statusMessage: 'Click register again.'})\n    } else if (this.state.citizen.count != 1) {\n      this.setState({ statusMessage: 'Error: either you spelled something wrong or this citizen is already registered with another address.'})\n    } else {\n      this.setState({ statusMessage: 'Registering...'})\n      await this.postAddress()\n      this.setState({ statusMessage: ''})\n    }\n  }\n\n  fillRandom = async() => {\n    await this.getCitizen(2)\n    console.log(this.state.citizen)\n    if(this.state.citizen.dob) {\n      this.setState({\n        fname: this.state.citizen.first_name,\n        lname: this.state.citizen.last_name,\n        ssn: this.state.citizen.ssn,\n        dob: this.state.citizen.dob.substring(0, 10)\n      })\n    }\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n          <Navbar account={this.state.account} town={this.state.town} />\n          {/* <button onClick={this.getCitizen}>GET</button>\n          <button onClick={this.postAddress}>POST</button> */}\n\n          {/* <VoterHome /> */}\n          {/* <AdminHome /> */}\n          {\n            this.state.registered ?\n            <VoterHome \n              fname={this.state.fname}\n              lname={this.state.lname}\n            /> :\n            <div>\n              <Register\n                handle={this.handleChange}\n                register={this.register}\n                key={this.state.ssn}\n                fname={this.state.fname}\n                lname={this.state.lname}\n                ssn={this.state.ssn}\n                dob={this.state.dob}\n              />\n              <button onClick={async () => this.fillRandom()}>Random Citizen</button>\n            </div>\n          }\n          <p>{this.state.statusMessage}</p>\n      </div>\n    );\n  }\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}